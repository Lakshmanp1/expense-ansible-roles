- name: disable nodejs module
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs:20 module
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs 
  ansible.builtin.package:
    name: "{{ item }}"
    state: installed
  loop:
  - nodejs
  - mysql
- name: create user expense 
  ansible.builtin.user:
    name: expense 
- name: create /app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download the application code 
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip the application code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: true

- name: install nodejs dependies
  community.general.npm:
    path: /app

- name: copy the backend.service file 
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: intall python packages 
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop: 
  - PyMySQL
  - cryptography

- name: import the mysql schema 
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_host: "{{ MYSQL_HOST }}"
    login_password: "{{ login_password }}"
    login_user: "{{ login_user }}"

- name: daemon relod, enable and restart the backend
  ansible.builtin.systemd_service: 
    name: backend
    daemon_reload: true
    enabled: true
    state: restarted
    


    